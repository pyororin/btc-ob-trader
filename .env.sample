# .env.local ファイルを作成して、以下の環境変数を設定してください。
# このファイルは、ローカル開発環境でのみ使用されます。

# ==============================================================================
# DATABASE SETTINGS
# ==============================================================================
# TimescaleDB/PostgreSQL への接続情報
# `make up` や `make monitor` で起動したDockerコンテナ内のDBに接続する際のデフォルト値です。
DB_HOST=timescaledb
DB_PORT=5432
DB_USER=bot
DB_PASSWORD=password
DB_NAME=coincheck_data
DB_SSLMODE=disable

# ==============================================================================
# API CREDENTIALS
# ==============================================================================
# 取引所のAPIキーとシークレット
# 実際の取引を行う際に必要です。
API_KEY="YOUR_API_KEY"
API_SECRET="YOUR_API_SECRET"

# ==============================================================================
# OPTIMIZATION SETTINGS
# ==============================================================================
# `make optimize` で使用するパラメータ
#
# 最適化の試行回数
# N_TRIALS=100
#
# 最適化に使用するDBのURL
# デフォルトはローカルのSQLiteファイルです。
# インメモリで実行する場合は 'sqlite:///:memory:' を使用します。
# STORAGE_URL=sqlite:///optuna_study.db
# STORAGE_URL=sqlite:///:memory:
#
# 最適化のStudy名
# STUDY_NAME=obi-scalp-bot-optimization
#
# 新しい最適化を強制的に開始するかどうか (true/false)
# trueに設定すると、既存のStudyを削除して最初から最適化を開始します。
# FRESH_START=false
#
# (DEPRECATED) `make optimize` 実行時に過去何時間分のデータをエクスポートして使用するか
# HOURS_BEFORE=24
#
# (RECOMMENDED) `make optimize` 実行時に使用するCSVファイルのパス
# CSV_PATH=./simulation/your_data.csv
#
# 最適化完了後、最適なパラメータを trade_config.yaml に上書きするか (true/false)
# OVERRIDE=false
