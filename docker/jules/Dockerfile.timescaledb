# ----------------------------------------------------------
# PostgreSQL 17 (Alpine) + TimescaleDB (apk, 軽量版)
#   イメージサイズ ≈ 300 MB
#   Jules の 1 GB 制限にフィット
# ----------------------------------------------------------
FROM postgres:17-alpine

USER root

# 1) edge/community/testing リポジトリを追加し、TimescaleDB + unzip を導入
RUN echo "https://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    echo "https://dl-cdn.alpinelinux.org/alpine/edge/testing"   >> /etc/apk/repositories && \
    apk update && \
    apk add --no-cache postgresql-timescaledb unzip

# 2) Alpine が置く .so/.control を公式 Postgres が参照する /usr/local にブリッジ
RUN set -e \
    # ライブラリ (.so)
    && mkdir -p /usr/local/lib/postgresql \
    && ln -sf /usr/lib/postgresql17/timescaledb*.so /usr/local/lib/postgresql/ \
    # コントロール & SQL スクリプト
    && mkdir -p /usr/local/share/postgresql/extension \
    && ln -sf /usr/share/postgresql17/extension/timescaledb* /usr/local/share/postgresql/extension/ \
    # 3) shared_preload_libraries をデフォルト conf に追記
    && echo "shared_preload_libraries = 'timescaledb'" >> /usr/local/share/postgresql/postgresql.conf.sample

# 4) 初期化スクリプト & ZIP シードデータ
COPY docker/jules/20_seed_stream.sh /docker-entrypoint-initdb.d/
COPY db/schema/jules/order_book_updates_jules.zip  /seed/order_book_updates_jules.zip
RUN chmod +x /docker-entrypoint-initdb.d/20_seed_stream.sh

USER postgres
EXPOSE 5432
CMD ["postgres"]
