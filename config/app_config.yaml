# OBI-Scalp-Bot アプリケーション設定ファイル (app_config.yaml)
#
# このファイルは、ボットの動作、データベース接続、アラート通知など、
# システム全体の挙動を制御する設定を管理します。

# ------------------------------------------------------------------------------
# アプリケーション全体設定 (Global Application Settings)
# ------------------------------------------------------------------------------

# log_level: アプリケーションが出力するログの詳細度。
# "debug", "info", "warn", "error" から選択します。
# 通常は "info" を使用し、問題調査時には "debug" に変更します。
# 環境変数 'LOG_LEVEL' で上書き可能です。
log_level: "info"

# obi_calculator_channel_size: OBI計算結果を格納するチャネルのバッファサイズ。
# この値は、インジケーターの計算（プロデューサー）とシグナル評価（コンシューマー）の
# 間の速度差を吸収するために使用されます。コンシューマーの処理が追いつかずに
# "output channel is full" の警告が頻発する場合、この値を増やすことで
# データドロップを減らすことができます。ただし、メモリ使用量が増加するため、
# システムリソースとのバランスを考慮して調整してください。
# デフォルト値: 100
obi_calculator_channel_size: 300

# ------------------------------------------------------------------------------
# 注文執行エンジン設定 (Order Execution Engine)
# ------------------------------------------------------------------------------
order:
  # timeout_seconds: 指値注文のタイムアウト時間（秒）。
  # この時間内に約定しない場合、注文は自動的にキャンセルされます。
  # 市場の流動性に応じて調整してください。
  # 例: 15
  timeout_seconds: 15

  # poll_interval_ms: 注文の約定状況を取引所に確認しにいく頻度（ミリ秒）。
  # APIリクエスト頻度に関わるため、取引所のレート制限を考慮して設定してください。
  # 例: 2000 (2秒)
  poll_interval_ms: 2000

# ------------------------------------------------------------------------------
# データベース設定 (Database)
# ------------------------------------------------------------------------------
database:
  # host: データベースサーバーのホスト名またはIPアドレス。
  # 環境変数 'DB_HOST' で上書き可能です。
  host: "timescaledb"
  # port: データベースサーバーのポート番号。
  port: 5432
  # user: データベース接続ユーザー名。
  # 環境変数 'DB_USER' で上書き可能です。
  user: "bot"
  # password: データベース接続パスワード。
  # 環境変数 'DB_PASSWORD' で上書き可能です。
  password: "password"
  # name: 接続するデータベース名。
  # 環境変数 'DB_NAME' で上書き可能です。
  name: "coincheck_data"
  # sslmode: SSLモード。"disable", "require", "verify-full" など。
  # 環境変数 'DB_SSLMODE' で上書き可能です。
  sslmode: "disable"

# ------------------------------------------------------------------------------
# データベース書き込み設定 (Database Writer)
# ------------------------------------------------------------------------------
db_writer:
  # batch_size: メモリ上のバッファから一度にデータベースへ書き込むレコード数。
  # 値を大きくすると書き込み効率は上がりますが、メモリ使用量も増加します。
  batch_size: 100
  # write_interval_seconds: バッファからデータベースへの書き込みを行う間隔（秒）。
  write_interval_seconds: 5
  # enable_async: データベースへの書き込みを非同期で行うか。
  # falseの場合、書き込み処理が完了するまで次の処理がブロックされます。
  enable_async: false

# ------------------------------------------------------------------------------
# PnLレポート設定 (PnL (Profit and Loss) Report)
# ------------------------------------------------------------------------------
pnl_report:
  # interval_minutes: PnLレポートを生成する間隔（分）。
  interval_minutes: 1
  # max_age_hours: 生成されたPnLレポートをデータベースに保存する最大期間（時間）。
  # この期間を過ぎた古いデータは自動的に削除されます。
  max_age_hours: 24

# ------------------------------------------------------------------------------
# アラート設定 (Alerting)
# ------------------------------------------------------------------------------
alert:
  discord:
    # enabled: Discordへのアラート通知を有効にするか。
    enabled: false
    # bot_token: Discord Botの認証トークン。
    # セキュリティのため、環境変数 'DISCORD_BOT_TOKEN' で設定することを強く推奨します。
    bot_token: "dummy_token"
    # user_id: 通知を送信する先のDiscordユーザーID。
    # 開発者モードでユーザー名を右クリックしてIDをコピーできます。
    # 環境変数 'DISCORD_USER_ID' で設定することを強く推奨します。
    user_id: "dummy_user_id"
